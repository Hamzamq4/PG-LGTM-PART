name: "CodeQL Analysis"

on:
  push:
    branches: ['**']
    paths-ignore:
      - 'codeql-analysis.sarif'
  pull_request:
    branches: ['**']
  schedule:
    - cron: '25 20 * * 6'

jobs:
  analyze-java:
    name: Analyze Java
    runs-on: ubuntu-latest
    permissions:
      contents: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: temurin

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'java'
          build-mode: 'manual'
          queries: +security-and-quality

      - name: Build Java Project
        run: |
          cd jpamb
          mvn clean compile
        shell: bash

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: codeql-analysis.sarif
          upload: false

      - name: Commit and Push CodeQL SARIF Report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add codeql-analysis.sarif
          git commit -m "Add CodeQL analysis SARIF report"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:${{ github.ref }}

  generate-call-graph:
    name: Generate Call Graph
    runs-on: ubuntu-latest
    needs: analyze-java
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: temurin
  
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'java'
          build-mode: 'manual'
  
      - name: Build Java Project
        run: |
          cd jpamb
          mvn clean compile
        shell: bash
  
      - name: Run Call Graph Query
        uses: github/codeql-action/analyze@v3
        with:
          queries: ./.github/codeql-queries/call-graph.ql
          output: ../results
          upload: always
  
      - name: Extract Call Graph Results
        run: |
          unzip ../results/java.zip -d codeql-results
          # Check the extracted contents for debugging
          ls -R codeql-results
  
      - name: Convert Results to DOT Format
        run: |
          # Assuming call graph data is in 'results.bqrs' or similar
          dot_file="call-graph.dot"
          touch $dot_file
          echo "digraph CallGraph {" > $dot_file
          # Use a placeholder parser or script to populate $dot_file
          # Example:
          # Parse the extracted 'results.bqrs' to generate DOT graph
          echo "Graph generated." >> $dot_file
          echo "}" >> $dot_file
  
      - name: Commit and Push Call Graph
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add call-graph.dot
          git commit -m "Add CodeQL call graph in DOT format"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:${{ github.ref }}
